{"ast":null,"code":"var _jsxFileName = \"/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/PostUpvoter.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst UPDATE_POST_MUTATION = gql`\n  mutation updatePost($id: ID!, $votes: Int) {\n    updatePost(id: $id, votes: $votes) {\n      __typename\n      id\n      votes\n    }\n  }\n`;\nexport default function PostUpvoter({\n  votes,\n  id\n}) {\n  const [updatePost] = useMutation(UPDATE_POST_MUTATION);\n\n  const upvotePost = () => {\n    updatePost({\n      variables: {\n        id,\n        votes: votes + 1\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updatePost: {\n          __typename: 'Post',\n          id,\n          votes: votes + 1\n        }\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: () => upvotePost(),\n    className: \"jsx-852540806\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, votes, __jsx(_JSXStyle, {\n    id: \"852540806\",\n    __self: this\n  }, \"button.jsx-852540806{background-color:transparent;border:1px solid #e4e4e4;color:#000;}button.jsx-852540806:active{background-color:transparent;}button.jsx-852540806:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-color:transparent transparent #000000 transparent;border-style:solid;border-width:0 4px 6px 4px;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pZ2h6L0dpdC9BUEkvcHJpc21hLWV4YW1wbGVzX0dyYXBocWwvZnJvbnRfd2l0aC1hcG9sbG8tYXBwL2NvbXBvbmVudHMvUG9zdFVwdm90ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUNrQixBQUd3QyxBQUtBLEFBR1gsNkJBUE8sQUFLM0IseUJBSmEsV0FDYixNQU0yRCx5REFDdEMsbUJBQ1EsMkJBQ2hCLFdBQ0YsU0FDUSxpQkFDVCxRQUNWIiwiZmlsZSI6Ii9Vc2Vycy9pZ2h6L0dpdC9BUEkvcHJpc21hLWV4YW1wbGVzX0dyYXBocWwvZnJvbnRfd2l0aC1hcG9sbG8tYXBwL2NvbXBvbmVudHMvUG9zdFVwdm90ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VNdXRhdGlvbiB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJ1xuXG5jb25zdCBVUERBVEVfUE9TVF9NVVRBVElPTiA9IGdxbGBcbiAgbXV0YXRpb24gdXBkYXRlUG9zdCgkaWQ6IElEISwgJHZvdGVzOiBJbnQpIHtcbiAgICB1cGRhdGVQb3N0KGlkOiAkaWQsIHZvdGVzOiAkdm90ZXMpIHtcbiAgICAgIF9fdHlwZW5hbWVcbiAgICAgIGlkXG4gICAgICB2b3Rlc1xuICAgIH1cbiAgfVxuYFxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQb3N0VXB2b3RlciAoeyB2b3RlcywgaWQgfSkge1xuICBjb25zdCBbdXBkYXRlUG9zdF0gPSB1c2VNdXRhdGlvbihVUERBVEVfUE9TVF9NVVRBVElPTilcblxuICBjb25zdCB1cHZvdGVQb3N0ID0gKCkgPT4ge1xuICAgIHVwZGF0ZVBvc3Qoe1xuICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgIGlkLFxuICAgICAgICB2b3Rlczogdm90ZXMgKyAxXG4gICAgICB9LFxuICAgICAgb3B0aW1pc3RpY1Jlc3BvbnNlOiB7XG4gICAgICAgIF9fdHlwZW5hbWU6ICdNdXRhdGlvbicsXG4gICAgICAgIHVwZGF0ZVBvc3Q6IHtcbiAgICAgICAgICBfX3R5cGVuYW1lOiAnUG9zdCcsXG4gICAgICAgICAgaWQsXG4gICAgICAgICAgdm90ZXM6IHZvdGVzICsgMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB1cHZvdGVQb3N0KCl9PlxuICAgICAge3ZvdGVzfVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNGU0ZTQ7XG4gICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIH1cbiAgICAgICAgYnV0dG9uOmFjdGl2ZSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzAwMDAwMCB0cmFuc3BhcmVudDtcbiAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgIGJvcmRlci13aWR0aDogMCA0cHggNnB4IDRweDtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2J1dHRvbj5cbiAgKVxufVxuIl19 */\\n/*@ sourceURL=/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/PostUpvoter.js */\"));\n}","map":{"version":3,"sources":["/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/PostUpvoter.js"],"names":["React","useMutation","gql","UPDATE_POST_MUTATION","PostUpvoter","votes","id","updatePost","upvotePost","variables","optimisticResponse","__typename"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,oBAAoB,GAAGD,GAAI;;;;;;;;CAAjC;AAUA,eAAe,SAASE,WAAT,CAAsB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAtB,EAAqC;AAClD,QAAM,CAACC,UAAD,IAAeN,WAAW,CAACE,oBAAD,CAAhC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBD,IAAAA,UAAU,CAAC;AACTE,MAAAA,SAAS,EAAE;AACTH,QAAAA,EADS;AAETD,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAFN,OADF;AAKTK,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,UAAU,EAAE,UADM;AAElBJ,QAAAA,UAAU,EAAE;AACVI,UAAAA,UAAU,EAAE,MADF;AAEVL,UAAAA,EAFU;AAGVD,UAAAA,KAAK,EAAEA,KAAK,GAAG;AAHL;AAFM;AALX,KAAD,CAAV;AAcD,GAfD;;AAiBA,SACE;AAAQ,IAAA,OAAO,EAAE,MAAMG,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH;AAAA;AAAA;AAAA,q0FADF;AAyBD","sourcesContent":["import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nconst UPDATE_POST_MUTATION = gql`\n  mutation updatePost($id: ID!, $votes: Int) {\n    updatePost(id: $id, votes: $votes) {\n      __typename\n      id\n      votes\n    }\n  }\n`\n\nexport default function PostUpvoter ({ votes, id }) {\n  const [updatePost] = useMutation(UPDATE_POST_MUTATION)\n\n  const upvotePost = () => {\n    updatePost({\n      variables: {\n        id,\n        votes: votes + 1\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updatePost: {\n          __typename: 'Post',\n          id,\n          votes: votes + 1\n        }\n      }\n    })\n  }\n\n  return (\n    <button onClick={() => upvotePost()}>\n      {votes}\n      <style jsx>{`\n        button {\n          background-color: transparent;\n          border: 1px solid #e4e4e4;\n          color: #000;\n        }\n        button:active {\n          background-color: transparent;\n        }\n        button:before {\n          align-self: center;\n          border-color: transparent transparent #000000 transparent;\n          border-style: solid;\n          border-width: 0 4px 6px 4px;\n          content: '';\n          height: 0;\n          margin-right: 5px;\n          width: 0;\n        }\n      `}</style>\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}