{"ast":null,"code":"var _jsxFileName = \"/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"../components/App\";\nimport InfoBox from \"../components/InfoBox\";\nimport Header from \"../components/Header\";\nimport Submit from \"../components/Submit\";\nimport PostList from \"../components/PostList\";\nimport { withApollo } from \"../lib/apollo\";\nimport { Button, Box } from \"@material-ui/core\";\n\nconst IndexPage = props => __jsx(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), __jsx(InfoBox, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"\\u2139\\uFE0F This example shows how to fetch all initial apollo queries on the server. If you \", __jsx(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"reload\"), \" this page you won't see a loader since Apollo fetched all needed data on the server. This prevents\", \" \", __jsx(\"a\", {\n  href: \"https://nextjs.org/blog/next-9#automatic-static-optimization\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"automatic static optimization\"), \" \", \"in favour of full Server-Side-Rendering.\"), __jsx(Submit, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), __jsx(PostList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), __jsx(Box, {\n  mt: 3,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(Button, {\n  variant: \"contained\",\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"material-ui works\")));\n\nexport default withApollo(IndexPage);","map":{"version":3,"sources":["/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/pages/index.js"],"names":["App","InfoBox","Header","Submit","PostList","withApollo","Button","Box","IndexPage","props"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,mBAA5B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IACrB,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAEiB;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,yGAGoE,GAHpE,EAIE;AACE,EAAA,IAAI,EAAC,8DADP;AAEE,EAAA,MAAM,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJF,EASO,GATP,6CAFF,EAcE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdF,EAeE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfF,EAgBE,MAAC,GAAD;AAAK,EAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,WAAhB;AAA4B,EAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAhBF,CADF;;AAyBA,eAAeJ,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import App from \"../components/App\";\nimport InfoBox from \"../components/InfoBox\";\nimport Header from \"../components/Header\";\nimport Submit from \"../components/Submit\";\nimport PostList from \"../components/PostList\";\nimport { withApollo } from \"../lib/apollo\";\nimport { Button, Box } from \"@material-ui/core\";\n\nconst IndexPage = props => (\n  <App>\n    <Header />\n    <InfoBox>\n      ℹ️ This example shows how to fetch all initial apollo queries on the\n      server. If you <a href=\"/\">reload</a> this page you won't see a loader\n      since Apollo fetched all needed data on the server. This prevents{\" \"}\n      <a\n        href=\"https://nextjs.org/blog/next-9#automatic-static-optimization\"\n        target=\"_blank\"\n      >\n        automatic static optimization\n      </a>{\" \"}\n      in favour of full Server-Side-Rendering.\n    </InfoBox>\n    <Submit />\n    <PostList />\n    <Box mt={3}>\n      <Button variant=\"contained\" color=\"primary\">\n        material-ui works\n      </Button>\n    </Box>\n  </App>\n);\n\nexport default withApollo(IndexPage);\n"]},"metadata":{},"sourceType":"module"}