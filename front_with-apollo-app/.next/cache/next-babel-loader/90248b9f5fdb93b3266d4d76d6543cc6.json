{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/Submit.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createPost($title: String!, $url: String!) {\\n    createPost(title: $title, url: $url) {\\n      id\\n      title\\n      votes\\n      url\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { ALL_POSTS_QUERY, allPostsQueryVars } from './PostList';\nvar CREATE_POST_MUTATION = gql(_templateObject());\nexport default function Submit() {\n  var _useMutation = useMutation(CREATE_POST_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createPost = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var form = event.target;\n    var formData = new window.FormData(form);\n    var title = formData.get('title');\n    var url = formData.get('url');\n    form.reset();\n    createPost({\n      variables: {\n        title: title,\n        url: url\n      },\n      update: function update(proxy, _ref) {\n        var createPost = _ref.data.createPost;\n        var data = proxy.readQuery({\n          query: ALL_POSTS_QUERY,\n          variables: allPostsQueryVars\n        }); // Update the cache with the new post at the top of the\n\n        proxy.writeQuery({\n          query: ALL_POSTS_QUERY,\n          data: _objectSpread({}, data, {\n            allPosts: [createPost].concat(_toConsumableArray(data.allPosts))\n          }),\n          variables: allPostsQueryVars\n        });\n      }\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-4286934451\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-4286934451\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Submit\"), __jsx(\"input\", {\n    placeholder: \"title\",\n    name: \"title\",\n    type: \"text\",\n    required: true,\n    className: \"jsx-4286934451\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    placeholder: \"url\",\n    name: \"url\",\n    type: \"url\",\n    required: true,\n    className: \"jsx-4286934451\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    className: \"jsx-4286934451\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Submit\"), __jsx(_JSXStyle, {\n    id: \"4286934451\",\n    __self: this\n  }, \"form.jsx-4286934451{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}h1.jsx-4286934451{font-size:20px;}input.jsx-4286934451{display:block;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pZ2h6L0dpdC9BUEkvcHJpc21hLWV4YW1wbGVzX0dyYXBocWwvZnJvbnRfd2l0aC1hcG9sbG8tYXBwL2NvbXBvbmVudHMvU3VibWl0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVEa0IsQUFHMkMsQUFLakIsQUFHRCxjQUNLLENBSHJCLGlCQUxzQixDQVN0QixtQkFScUIsbUJBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9pZ2h6L0dpdC9BUEkvcHJpc21hLWV4YW1wbGVzX0dyYXBocWwvZnJvbnRfd2l0aC1hcG9sbG8tYXBwL2NvbXBvbmVudHMvU3VibWl0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTXV0YXRpb24gfSBmcm9tICdAYXBvbGxvL3JlYWN0LWhvb2tzJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IEFMTF9QT1NUU19RVUVSWSwgYWxsUG9zdHNRdWVyeVZhcnMgfSBmcm9tICcuL1Bvc3RMaXN0J1xuXG5jb25zdCBDUkVBVEVfUE9TVF9NVVRBVElPTiA9IGdxbGBcbiAgbXV0YXRpb24gY3JlYXRlUG9zdCgkdGl0bGU6IFN0cmluZyEsICR1cmw6IFN0cmluZyEpIHtcbiAgICBjcmVhdGVQb3N0KHRpdGxlOiAkdGl0bGUsIHVybDogJHVybCkge1xuICAgICAgaWRcbiAgICAgIHRpdGxlXG4gICAgICB2b3Rlc1xuICAgICAgdXJsXG4gICAgICBjcmVhdGVkQXRcbiAgICB9XG4gIH1cbmBcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU3VibWl0ICgpIHtcbiAgY29uc3QgW2NyZWF0ZVBvc3QsIHsgbG9hZGluZyB9XSA9IHVzZU11dGF0aW9uKENSRUFURV9QT1NUX01VVEFUSU9OKVxuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IGV2ZW50ID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgY29uc3QgZm9ybSA9IGV2ZW50LnRhcmdldFxuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IHdpbmRvdy5Gb3JtRGF0YShmb3JtKVxuICAgIGNvbnN0IHRpdGxlID0gZm9ybURhdGEuZ2V0KCd0aXRsZScpXG4gICAgY29uc3QgdXJsID0gZm9ybURhdGEuZ2V0KCd1cmwnKVxuICAgIGZvcm0ucmVzZXQoKVxuXG4gICAgY3JlYXRlUG9zdCh7XG4gICAgICB2YXJpYWJsZXM6IHsgdGl0bGUsIHVybCB9LFxuICAgICAgdXBkYXRlOiAocHJveHksIHsgZGF0YTogeyBjcmVhdGVQb3N0IH0gfSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gcHJveHkucmVhZFF1ZXJ5KHtcbiAgICAgICAgICBxdWVyeTogQUxMX1BPU1RTX1FVRVJZLFxuICAgICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnNcbiAgICAgICAgfSlcbiAgICAgICAgLy8gVXBkYXRlIHRoZSBjYWNoZSB3aXRoIHRoZSBuZXcgcG9zdCBhdCB0aGUgdG9wIG9mIHRoZVxuICAgICAgICBwcm94eS53cml0ZVF1ZXJ5KHtcbiAgICAgICAgICBxdWVyeTogQUxMX1BPU1RTX1FVRVJZLFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIC4uLmRhdGEsXG4gICAgICAgICAgICBhbGxQb3N0czogW2NyZWF0ZVBvc3QsIC4uLmRhdGEuYWxsUG9zdHNdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB2YXJpYWJsZXM6IGFsbFBvc3RzUXVlcnlWYXJzXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGZvcm0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0+XG4gICAgICA8aDE+U3VibWl0PC9oMT5cbiAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj0ndGl0bGUnIG5hbWU9J3RpdGxlJyB0eXBlPSd0ZXh0JyByZXF1aXJlZCAvPlxuICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSd1cmwnIG5hbWU9J3VybCcgdHlwZT0ndXJsJyByZXF1aXJlZCAvPlxuICAgICAgPGJ1dHRvbiB0eXBlPSdzdWJtaXQnIGRpc2FibGVkPXtsb2FkaW5nfT5cbiAgICAgICAgU3VibWl0XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgZm9ybSB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9mb3JtPlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/Submit.js */\"));\n}","map":{"version":3,"sources":["/Users/ighz/Git/API/prisma-examples_Graphql/front_with-apollo-app/components/Submit.js"],"names":["useMutation","gql","ALL_POSTS_QUERY","allPostsQueryVars","CREATE_POST_MUTATION","Submit","createPost","loading","handleSubmit","event","preventDefault","form","target","formData","window","FormData","title","get","url","reset","variables","update","proxy","data","readQuery","query","writeQuery","allPosts"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;AAEA,IAAMC,oBAAoB,GAAGH,GAAH,mBAA1B;AAYA,eAAe,SAASI,MAAT,GAAmB;AAAA,qBACEL,WAAW,CAACI,oBAAD,CADb;AAAA;AAAA,MACzBE,UADyB;AAAA,MACXC,OADW,oBACXA,OADW;;AAGhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,QAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoBJ,IAApB,CAAjB;AACA,QAAMK,KAAK,GAAGH,QAAQ,CAACI,GAAT,CAAa,OAAb,CAAd;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACI,GAAT,CAAa,KAAb,CAAZ;AACAN,IAAAA,IAAI,CAACQ,KAAL;AAEAb,IAAAA,UAAU,CAAC;AACTc,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,KAAK,EAALA,KAAF;AAASE,QAAAA,GAAG,EAAHA;AAAT,OADF;AAETG,MAAAA,MAAM,EAAE,gBAACC,KAAD,QAAqC;AAAA,YAAnBhB,UAAmB,QAA3BiB,IAA2B,CAAnBjB,UAAmB;AAC3C,YAAMiB,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAC3BC,UAAAA,KAAK,EAAEvB,eADoB;AAE3BkB,UAAAA,SAAS,EAAEjB;AAFgB,SAAhB,CAAb,CAD2C,CAK3C;;AACAmB,QAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,UAAAA,KAAK,EAAEvB,eADQ;AAEfqB,UAAAA,IAAI,oBACCA,IADD;AAEFI,YAAAA,QAAQ,GAAGrB,UAAH,4BAAkBiB,IAAI,CAACI,QAAvB;AAFN,YAFW;AAMfP,UAAAA,SAAS,EAAEjB;AANI,SAAjB;AAQD;AAhBQ,KAAD,CAAV;AAkBD,GA1BD;;AA4BA,SACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,IAAA,WAAW,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,WAAW,EAAC,KAAnB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAoC,IAAA,IAAI,EAAC,KAAzC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA,4uGADF;AAwBD","sourcesContent":["import { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { ALL_POSTS_QUERY, allPostsQueryVars } from './PostList'\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`\n\nexport default function Submit () {\n  const [createPost, { loading }] = useMutation(CREATE_POST_MUTATION)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.target\n    const formData = new window.FormData(form)\n    const title = formData.get('title')\n    const url = formData.get('url')\n    form.reset()\n\n    createPost({\n      variables: { title, url },\n      update: (proxy, { data: { createPost } }) => {\n        const data = proxy.readQuery({\n          query: ALL_POSTS_QUERY,\n          variables: allPostsQueryVars\n        })\n        // Update the cache with the new post at the top of the\n        proxy.writeQuery({\n          query: ALL_POSTS_QUERY,\n          data: {\n            ...data,\n            allPosts: [createPost, ...data.allPosts]\n          },\n          variables: allPostsQueryVars\n        })\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Submit</h1>\n      <input placeholder='title' name='title' type='text' required />\n      <input placeholder='url' name='url' type='url' required />\n      <button type='submit' disabled={loading}>\n        Submit\n      </button>\n      <style jsx>{`\n        form {\n          border-bottom: 1px solid #ececec;\n          padding-bottom: 20px;\n          margin-bottom: 20px;\n        }\n        h1 {\n          font-size: 20px;\n        }\n        input {\n          display: block;\n          margin-bottom: 10px;\n        }\n      `}</style>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}