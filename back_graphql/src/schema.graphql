scalar DateTime

type Query {
    feed: [Post!]!
    filterPosts(searchString: String): [Post!]!
    post(id: ID!): Post
    getAllProduct: [Product]
    getByIdProduct(id: ID!): Product
}

type Mutation {
    signupUser(email: String!, name: String): User!
    createDraft(title: String!, content: String, authorEmail: String!): Post!
    deletePost(id: ID!): Post
    publish(id: ID!): Post
    deleteProduct(id: ID!): Product
    addProduct(createdAt: DateTime, updatedAt: DateTime, price:Float!, name:String!, description:String, quantity:Int, image:String, published: Boolean, category:String!):Product,
    updateProduct(id: ID!,createdAt: DateTime, updatedAt: DateTime, price:Float, name:String, description:String, quantity:Int, image:String, published: Boolean, category:String):Product,
    createCheckoutSession: String!
}

type Post {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    published: Boolean!
    title: String!
    content: String
    author: User!
}

type User {
    id: ID!
    email: String!
    name: String
    posts: [Post!]!
}

type Product {
    id: ID!,
    createdAt: DateTime
    updatedAt: DateTime
    price: Float!
    name: String!
    description: String
    quantity: Int
    image: String
    published: Boolean
    category: String!
}